# AÑADIR SSL PARA HTTPS
events {}

http {
    include /etc/nginx/mime.types;
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Habilitar soporte para WebSockets
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    upstream django_api {
        server django-api-principal:8000;
    }

    upstream flask_api {
        server flask-api-chat:5000;
    }

    server {
        listen 80;
        server_name localhost;
        
        # Configuración de CORS para permitir compartir recursos entre dominios
        # y asegurar que los tokens de autenticación puedan ser compartidos
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        # Manejo de solicitudes preflight OPTIONS para CORS
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Content-Type' 'text/plain; charset=utf-8';
            add_header 'Content-Length' 0;
            return 204;
        }

        # Proxy para la API Django
        location /api/ {
            proxy_pass http://django_api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Conservar el encabezado Authorization para que el token JWT pase correctamente
            proxy_set_header Authorization $http_authorization;
        }
        
        # Rutas específicas para la API de Django basadas en tu urls.py
        location ~ ^/(admin|register|token|google|profile)/ {
            proxy_pass http://django_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Conservar el encabezado Authorization para que el token JWT pase correctamente
            proxy_set_header Authorization $http_authorization;
        }

        # Proxy para la API Flask (chat) con soporte WebSockets
        location /chat {
            proxy_pass http://flask_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # Conservar el encabezado Authorization
            proxy_set_header Authorization $http_authorization;
            
            # Configuración WebSockets para toda la ruta /chat
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_read_timeout 86400;
            proxy_send_timeout 60s;
            proxy_connect_timeout 60s;
        }
        
        
        # Regla para manejar otras rutas y enviarlas a Django por defecto
        location / {
            proxy_pass http://django_api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
        }
    }
}